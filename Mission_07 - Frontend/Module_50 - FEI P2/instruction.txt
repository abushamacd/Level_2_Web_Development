LogoProgramming Hero
Concept Crackerz
Course Details
Support
Blog
My Classes
Conceptual Sessions
notification0
gem
35
   
Next Level Web Development





Text Description:

#module-50_relased

#UMS_Frontend Integration using Next.Js Part-2

হুররে আজকে আমাদের প্রোজেক্ট এর Authentication এর কাজটি করে ফেলবো সাথে আরও এক্সাইটিং জিনিস দেখবো এই মডিউলে;



মডিউলে ব্যবহৃত রিসোর্স লিংকসঃ

সার্ভারস গিটহাব লিংকসঃ 

Auth Service: https://github.com/Apollo-Level2-Web-Dev/university-management-auth-service

Core Service:

https://github.com/Apollo-Level2-Web-Dev/university-management-core-service

Course Content

97%

Search Lesson






































































































































































































































































































































































































































































































































































































































































50-1.Initialize and run previous servers for authentication


50-2.Create baseApi endpoints for authentication using RTK query


50-3.Inject authApi endpoints into baseApi using RTK query


50-4.Storing logged-in user access token in localStorage


50-5.Retrieving logged-in user info from localStorage


50-6.Managing private routes and implementing functionality


50-7.Implementing user logout functionality


50-8.Deep dive into axios instance and interceptors


50-9.Customizing axios interceptors response


50-10.Some small task. Module Summary

Office Address

Level-4, 34, Awal Centre, Banani, Dhaka
Support: web@programming-hero.com
Helpline: 01322810882
(Available : Sat - Thu, 10:00 AM to 7:00 PM)
Useful Links

Blog
Success
About us
Refund policy
Terms and Conditions
Privacy & App Privacy Policy
Follow Us

©Programming Hero 2023





Text Description:

#module-50_relased

#UMS_Frontend Integration using Next.Js Part-2

হুররে আজকে আমাদের প্রোজেক্ট এর Authentication এর কাজটি করে ফেলবো সাথে আরও এক্সাইটিং জিনিস দেখবো এই মডিউলে;



মডিউলে ব্যবহৃত রিসোর্স লিংকসঃ

সার্ভারস গিটহাব লিংকসঃ 

Auth Service: https://github.com/Apollo-Level2-Web-Dev/university-management-auth-service

Core Service:

https://github.com/Apollo-Level2-Web-Dev/university-management-core-service

Api Gateway: 

https://github.com/Apollo-Level2-Web-Dev/university-management-api-gateway

Postman Collections: https://documenter.getpostman.com/view/26694209/2s9YC5zCgD

Bcrypt Hash Generator:

https://www.javainuse.com/onlineBcrypt

Axios baseQuery:

https://redux-toolkit.js.org/rtk-query/usage/customizing-queries

Injecting & exporting additional endpoints:

https://redux-toolkit.js.org/rtk-query/usage/code-splitting

Axios Interceptors:

https://axios-http.com/docs/interceptors



.env variables of Auth Service:

NODE_ENV=development

PORT=3001



DATABASE_URL= YOUR MONGODB URL



DEFAULT_STUDENT_PASS = university123

DEFAULT_FACULTY_PASS = universityfaculty123

DEFAULT_ADMIN_PASS = universityadmin123



BCRYPT_SALT_ROUNDS=12

JWT_SECRET= 'programming-hero'

JWT_EXPIRES_IN=1d

JWT_REFRESH_SECRET='programming-hero'

JWT_REFRESH_EXPIRES_IN=365d



REDIS_URL='redis://127.0.0.1:6379'

REDIS_TOKEN_EXPIRES_IN=846000



.env variables of Core Service:

LOCAL_DATABASE_URL="postgresql://postgres:postgres@localhost:5432/core_service_ph?schema=public"

DATABASE_URL="Your PostgreSql deployed supabase/railway Url"

NODE_ENV=development

PORT=3002

JWT_SECRET='programming-hero'



DB_URL="Your PostgreSql deployed supabase/railway Url"



REDIS_URL='redis://127.0.0.1:6379'

REDIS_TOKEN_EXPIRES_IN=846000

.env variables of Api Gateway:

NODE_ENV=development

PORT=3030



JWT_SECRET='programming-hero'

REDIS_URL='redis://127.0.0.1:6379'



AUTH_SERVICE_URL=http://localhost:3001/api/v1

CORE_SERVICE_URL=http://localhost:3002/api/v1



CLOUDINARY_CLOUD_NAME=

CLOUDINARY_API_KEY=

CLOUDINARY_API_SECRET=



Module Github Code link:

https://github.com/Apollo-Level2-Web-Dev/university-management-frontend/tree/um-part-2



## code in the module_49 folder